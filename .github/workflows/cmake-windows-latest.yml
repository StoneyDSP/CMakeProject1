name: CMake-Windows-latest

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '14'
    - uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: x64
    - run: npm install -g bats
    - run: bats -v

    - name: Load
      working-directory: ${{github.workspace}}
      run: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvarsall.bat" x64

    - name: Configure
      working-directory: ${{github.workspace}}
      # Configure CMake in a 'bin' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/bin -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_C_COMPILER=cl.exe -DCMAKE_CXX_COMPILER=cl.exe -Wdev -Wdeprecated --check-system-vars -Werror=dev -Werror=deprecated -G "Ninja Multi-Config"

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/bin --config ${{env.BUILD_TYPE}} --target all

    - name: Install
      # Build your program with the given configuration
      working-directory: ${{github.workspace}}/bin
      run: cpack --config CPackSourceConfig.cmake

    - name: Test
      working-directory: ${{github.workspace}}/bin
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Zip
      working-directory: ${{github.workspace}}/bin
      run: cpack -G ZIP -C ${{env.BUILD_TYPE}}

    - name: Tar
      working-directory: ${{github.workspace}}/bin
      run: cpack -G TAR -C ${{env.BUILD_TYPE}}
