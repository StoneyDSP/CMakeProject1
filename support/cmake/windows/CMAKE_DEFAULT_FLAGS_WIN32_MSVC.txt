# CMake requirements.
cmake_minimum_required(VERSION 3.7...3.24.2)

string(APPEND CMAKE_CXX_FLAGS "/nologo /DWIN32 /D_WINDOWS /W3 /utf-8 /EHsc ")
string(APPEND CMAKE_CXX_FLAGS_DEBUG "/Zi /Ob0 /Od /RTC1 ")
string(APPEND CMAKE_CXX_FLAGS_RELEASE "/O2 /Ob2 /DNDEBUG ")
string(APPEND CMAKE_CXX_FLAGS_MINSIZEREL "/O1 /Ob1 /DNDEBUG ")
string(APPEND CMAKE_CXX_FLAGS_RELWITHDEBINFO "/Zi /O2 /Ob1 /DNDEBUG ")

string(APPEND CMAKE_C_FLAGS "/nologo /DWIN32 /D_WINDOWS /W3 /utf-8 ")
string(APPEND CMAKE_C_FLAGS_DEBUG "/Zi /Ob0 /Od /RTC1 ")
string(APPEND CMAKE_C_FLAGS_RELEASE "/O2 /Ob2 /DNDEBUG ")
string(APPEND CMAKE_C_FLAGS_MINSIZEREL "/O1 /Ob1 /DNDEBUG ")
string(APPEND CMAKE_C_FLAGS_RELWITHDEBINFO "/Zi /O2 /Ob1 /DNDEBUG ")

string(APPEND VCPKG_CXX_FLAGS ${CMAKE_CXX_FLAGS})
string(APPEND VCPKG_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG})
string(APPEND VCPKG_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE})
string(APPEND VCPKG_CXX_FLAGS_MINSIZEREL ${CMAKE_CXX_FLAGS_MINSIZEREL})
string(APPEND VCPKG_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO})

string(APPEND VCPKG_C_FLAGS ${CMAKE_C_FLAGS})
string(APPEND VCPKG_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG})
string(APPEND VCPKG_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})
string(APPEND VCPKG_C_FLAGS_MINSIZEREL ${CMAKE_C_FLAGS_MINSIZEREL})
string(APPEND VCPKG_C_FLAGS_RELWITHDEBINFO ${CMAKE_C_FLAGS_RELWITHDEBINFO})

#if(${CMAKE_BUILD_TYPE} MATCHES Debug)
#    add_compile_definitions(_DEBUG=1)
#    message(STATUS "Setting Compile Definition _DEBUG=1")
#else()
#    add_compile_definitions(NDEBUG=1)
#    message(STATUS "Setting Compile Definition NDEBUG=1")
#endif(${CMAKE_BUILD_TYPE} MATCHES Debug)

## Host handling:
#if(WIN32)
#    add_compile_definitions(WINDOWS=1)
#    message(STATUS "Setting Compile Definition WINDOWS=1")
#endif ()

#if (UNIX AND NOT APPLE)
#    add_compile_definitions(LINUX=1)
#    message(STATUS "Setting Compile Definition LINUX=1")
#endif ()

#if (APPLE)
#    add_compile_definitions(APPLE=1)
#    message(STATUS "Setting Compile Definition APPLE=1")
#endif ()
